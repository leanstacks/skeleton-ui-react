name: CI

on:
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_CFN_TEMPLATE: template.yml
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_ROLE_ARN: ${{ vars.AWS_ROLE_ARN_DEV }}
  ENV_FILE: ${{ secrets.ENV_CI }}

jobs:
  build:
    name: 'Build'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: 'Create .env File'
        run: |
          echo "${{ env.ENV_FILE }}" > .env

      - name: Build
        run: npm run build

  test:
    name: 'Test'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: 'Create .env File'
        run: |
          echo "${{ env.ENV_FILE }}" > .env

      - name: Run Unit Tests
        run: npm run test:ci

  scan:
    name: 'Scan'

    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: 'Create .env File'
        run: |
          echo "${{ env.ENV_FILE }}" > .env

      - name: Run Linter
        run: npm run lint

  validate-template:
    name: 'Validate CloudFormation Template'

    runs-on: ubuntu-latest
    timeout-minutes: 3

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Validate AWS CloudFormation Template
        run: |-
          aws cloudformation validate-template \
          --template-body file://${{ env.AWS_CFN_TEMPLATE }}
